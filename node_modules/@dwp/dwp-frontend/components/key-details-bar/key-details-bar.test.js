const { expect } = require('chai');

const { runA11yTests, getExamples, renderExample } = require('../../../lib/mochaHelpers');

const examples = getExamples('key-details-bar');

const componentName = 'KeyDetailsBar';

describe('Key details bar', () => {
  it('should display the primary identifier', async () => {
    const output = renderExample('key-details-bar', componentName, examples.default);
    await runA11yTests(output);
    expect(output).to.have.string(examples.default.primaryIdentifier.value);
  });

  it('should display the secondary identifier if provided', async () => {
    const output = renderExample('key-details-bar', componentName, examples.default);
    await runA11yTests(output);
    expect(output).to.have.string(examples.default.secondaryIdentifier.value);
  });

  it('should display the claim status if provided', async () => {
    const output = renderExample('key-details-bar', componentName, examples.default);
    await runA11yTests(output);
    expect(output).to.have.string(examples.default.status.value);
  });

  it('should render additional data if provided', async () => {
    const output = renderExample('key-details-bar', componentName, examples.default);
    await runA11yTests(output);
    expect(output).to.have.string(examples.default.additionalData[1].text);
  });

  it('should output additional attributes if provided', async () => {
    const output = renderExample('key-details-bar', componentName, examples.default);
    await runA11yTests(output);
    expect(output).to.have.string(examples.default.attributes['data-attribute']);
  });

  it('should output additional classes if provided', async () => {
    const output = renderExample('key-details-bar', componentName, examples.default);
    await runA11yTests(output);
    expect(output).to.have.string(examples.default.classes);
  });
});
